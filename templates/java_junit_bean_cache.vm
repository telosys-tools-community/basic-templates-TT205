/*
 * JUnit test case for $entity.name caching service
 * Created on $today.date ( Date ISO $today.date("yyyy-MM-dd") - Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */

package ${target.javaPackageFromFolder(${TEST_SRC})};


import $entity.fullName ;
import org.demo.cache.${entity.name}Cache ;

import org.junit.Assert;
import org.junit.Test;

/**
 * JUnit test case for $entity.name caching service
 * 
 * @author Telosys Tools Generator
 *
 */
#set ( $beanVar    = ${entity.name.toLowerCase()} )
#set ( $cacheClass = "${entity.name}Cache" )
public class ${cacheClass}Test 
{
	protected static final java.util.Date now = new java.util.Date();

	private final static void populate(${entity.name} ${beanVar}) {
#foreach( $field in $entity.attributes )
#set ( $type = $field.type.toLowerCase() )
#if ( $field.type == "byte" || $field.type == "Byte" )
		${beanVar}.${field.setter}( (byte) 1 ) ;
#elseif ( $field.type == "short" || $field.type == "Short" )
		${beanVar}.${field.setter}( (short) 1 ) ;
#elseif ( $field.type == "int" || $field.type == "Integer")
		${beanVar}.${field.setter}( 1 ) ;
#elseif ( $field.type == "long" || $field.type == "Long" )
		${beanVar}.${field.setter}( (long) 1 ) ;
#elseif ( $field.type == "float" || $field.type == "Float" )
		${beanVar}.${field.setter}( 12.345f ) ;
#elseif ( $field.type == "double" || $field.type == "Double" )
		${beanVar}.${field.setter}( 12.345 ) ;
#elseif ( $field.type == "String" )
		${beanVar}.${field.setter}( "A" ) ;
#elseif ( $field.type == "boolean" || $field.type == "Boolean" )
		${beanVar}.${field.setter}( false ) ;
#elseif ( $field.type == "BigDecimal" )
		${beanVar}.${field.setter}( new java.math.BigDecimal("12.3456") ) ;
#elseif ( $type == "boolean" )
		${beanVar}.${field.setter}( true ) ;
#elseif ( $field.fullType == "java.util.Date" )
		${beanVar}.${field.setter}( now ) ;
#elseif ( $field.fullType == "java.sql.Date" )
		${beanVar}.${field.setter}( new java.sql.Date(now.getTime()) ) ;
#elseif ( $field.fullType == "java.sql.Time" )
		${beanVar}.${field.setter}( new java.sql.Time(now.getTime()) ) ;
#elseif ( $field.fullType == "java.sql.Timestamp" )
		${beanVar}.${field.setter}( new java.sql.Timestamp(now.getTime()) ) ;
#elseif ( $field.fullType == "byte[]" )
		${beanVar}.${field.setter}( null ) ;
#end
#end
	}

	@Test
	public void testPutGetRemove() {
		
		System.out.println("Testing class ${cacheClass} ..." );
		
		${entity.name} ${beanVar} = new ${entity.name}();
		populate(${beanVar});
		System.out.println("Entity populated : " + ${beanVar} );
		
		${cacheClass}.put${entity.name}(${beanVar}) ;	// Store in cache	
		
		${entity.name} ${beanVar}2 = ${cacheClass}.get${entity.name}( $fn.argumentsListWithGetter( ${beanVar}, $entity.keyAttributes ) );
		Assert.assertTrue( ${beanVar} == ${beanVar}2 ) ; // Same instance
		
		${cacheClass}.remove${entity.name}(  $fn.argumentsListWithGetter( ${beanVar}, $entity.keyAttributes ) ) ; // Remove from cache	
		
		${entity.name} ${beanVar}3 = ${cacheClass}.get${entity.name}( $fn.argumentsListWithGetter( ${beanVar}, $entity.keyAttributes ) );
		Assert.assertTrue( null == ${beanVar}3 ) ; // Not in cache
		
	}
}
